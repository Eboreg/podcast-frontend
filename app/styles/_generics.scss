@use "sass:map";
@use "variables" as *;
@use "mixins";

/** display ******************************************************************/

.d-none {
    display: none !important;
}
.d-block {
    display: block !important;
}
.d-flex {
    display: flex !important;
}

@each $sname in map.keys($min-sizes) {
    @include mixins.min(#{$sname}) {
        .d-#{$sname}-none {
            display: none !important;
        }
        .d-#{$sname}-block {
            display: block !important;
        }
        .d-#{$sname}-flex {
            display: flex !important;
        }
    }
}

/** gap/margin/padding *******************************************************/

@each $lname, $length in $lengths {
    .gap-#{$lname} {
        gap: #{$length} !important;
    }
    .m-#{$lname} {
        margin: #{$length} !important;
    }
    .p-#{$lname} {
        padding: #{$length} !important;
    }

    @each $abbr, $dlist in $dimens {
        .m#{$abbr}-#{$lname} {
            @each $dimen in $dlist {
                margin-#{$dimen}: #{$length} !important;
            }
        }
        .p#{$abbr}-#{$lname} {
            @each $dimen in $dlist {
                padding-#{$dimen}: #{$length} !important;
            }
        }
    }

    @each $sname in map.keys($min-sizes) {
        @include mixins.min(#{$sname}) {
            .gap-#{$sname}-#{$lname} {
                gap: #{$length} !important;
            }
            .m-#{$sname}-#{$lname} {
                margin: #{$length} !important;
            }
            .p-#{$sname}-#{$lname} {
                padding: #{$length} !important;
            }

            @each $abbr, $dlist in $dimens {
                .m#{$abbr}-#{$sname}-#{$lname} {
                    @each $dimen in $dlist {
                        margin-#{$dimen}: #{$length} !important;
                    }
                }
                .p#{$abbr}-#{$sname}-#{$lname} {
                    @each $dimen in $dlist {
                        padding-#{$dimen}: #{$length} !important;
                    }
                }
            }
        }
    }
}

/** GENERIC CLASSES **********************************************************/

.align-center {
    align-items: center;
}

.align-start {
    align-items: start;
}

.bold {
    font-weight: bold;
}

.column {
    display: flex;
    flex-direction: column;
}

.content-width {
    width: var(--mm-content-width);
}

.cursor-default {
    cursor: default;
}

.cursor-pointer {
    cursor: pointer;
}

.ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
}

.fill {
    flex-grow: 1;
}

.oneliner {
    white-space: nowrap;
}

.pos-absolute {
    position: absolute;
}

.pos-relative {
    position: relative;
}

.row {
    display: flex;
    flex-direction: row;
}

.small {
    font-size: 12px;

    @include mixins.min(sm) {
        font-size: 14px;
    }
}

.text-center {
    text-align: center;
}

.w-100 {
    width: 100%;
}
